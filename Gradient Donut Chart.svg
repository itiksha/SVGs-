// Count the number of rows for a specific category (e.g., "Business Finance")
Var BF = CALCULATE(
    COUNTROWS('YourTable'), 
    'YourTable'[CategoryColumn] = "YourCategory" 
)  

// Count the total number of rows based on the current selection
Var Total = CALCULATE(
    COUNTROWS('YourTable'), 
    ALLSELECTED('YourTable')
)  

// Calculate the percentage of the specific category relative to the total
Var Donut_Fill = (BF / Total) * 100  

// Format the percentage for display inside the donut chart
Var Donut_Text = FORMAT(Donut_Fill / 100, "#.0%")  

// Define the circumference of the circle (radius = 80; can be changed as needed)
Var circumference = 2 * PI() * 80  

// Calculate the length of the filled part of the donut (based on percentage)
Var Fill_Length = (circumference * Donut_Fill) / 100  

// Calculate the length of the remaining (unfilled) part of the donut
Var Gap_Length = circumference - Fill_Length  

// Start the SVG encoding URL for embedding the SVG in Power BI
Var SVG_Data_URL = "data:image/svg+xml;utf8,"  

// Define the opening SVG tag with necessary attributes
Var SVG_Start = "<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 250 250'>"  

// Define the SVG elements, including gradient, styles, and text
Var SVG_Data = 
"
<defs>
    <linearGradient id='gradient' x1='0%' y1='0%' x2='100%' y2='0%'>
        <stop offset='0%' style='stop-color: #f04393' />   <!-- Starting gradient color -->
        <stop offset='100%' style='stop-color: #f9c449' /> <!-- Ending gradient color -->
    </linearGradient>
    <style>
        /* Define the unfilled background circle */
        #redCircle {
            fill: none;
            stroke: #f7f3f3; /* Color of the unfilled part */
            stroke-width: 15; /* Thickness of the circle */
        }
        /* Define the filled circle with gradient */
        #fillCircle {
            fill: none;
            stroke: url(#gradient); /* Apply the gradient to the filled part */
            stroke-width: 15; /* Thickness of the circle */
            stroke-dasharray: "& Fill_Length &", "& Gap_Length &"; /* Filled and unfilled lengths */
            transform: rotate(-90deg); /* Rotate to start from the top */
            transform-origin: center; /* Center the rotation */
            stroke-linecap: round; /* Rounded edges for the fill */
        }
        /* Define the text style in the center */
        #text {
            font-family: Segoe UI; /* Font style */
            font-size: 1.5em; /* Font size */
            text-anchor: middle; /* Align text horizontally */
            fill: #666; /* Text color */
        }
    </style>
</defs>
<circle id='redCircle' cx='125' cy='125' r='80'/> <!-- Background circle -->
<circle id='fillCircle' cx='125' cy='125' r='80'/> <!-- Filled circle -->
<text id='text' x='100' y='120' dx='1.1em' dy='1.2dem'> "& Donut_Text &" </text> <!-- Percentage text -->
"

// Define the closing SVG tag
Var SVG_End = "</svg>"

// Combine all parts and return the complete SVG as a URL
RETURN 
SVG_Data_URL & SVG_Start & SVG_Data & SVG_End
